package PP;

import com.fancy.entity.Session;
import com.fancy.entity.Ticket;
import com.fancy.entity.User;
import com.fancy.service.SessionService;
import com.fancy.service.TicketService;
import com.fancy.service.UserService;
import com.fancy.service.impl.SessionServiceImpl;
import com.fancy.service.impl.TicketServiceImpl;
import com.fancy.service.impl.UserServiceImpl;
import java.awt.Color;
import java.awt.Font;
import java.util.List;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

public class A8 extends javax.swing.JFrame {

    private List<Ticket> ticketlist;
    private TicketService ticketservice = new TicketServiceImpl();
    private int trow = -1;

    public A8() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tickettable = new javax.swing.JTable(){
            public boolean isCellEditable( int row, int column) {
                return false;
            }

        };
        delet = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        sIdtext = new javax.swing.JTextField();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1120, 630));
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setMaximumSize(new java.awt.Dimension(1120, 630));
        jPanel1.setMinimumSize(new java.awt.Dimension(1120, 630));
        jPanel1.setPreferredSize(new java.awt.Dimension(1120, 630));

        search.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        search.setForeground(new java.awt.Color(51, 51, 51));
        search.setText("搜索");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        tickettable.setModel(new DefaultTableModel(
            new Object[][] {
            },
            new String[] {
                "影票编号", "用户编号", "场次编号","座位号"
            }
        ) {
            boolean[] columnEditables = new boolean[] {
                false, false, false
            };
            public boolean isCellEditable(int row, int column) {
                return columnEditables[column];
            }
        });
        ticketlist=ticketservice.queryAllTicket();
        filltickettable(ticketlist);
        DefaultTableCellRenderer r = new DefaultTableCellRenderer();
        r.setHorizontalAlignment(JLabel.CENTER);
        tickettable.setDefaultRenderer(Object.class, r);
        tickettable.setRowHeight(70);
        tickettable.getTableHeader().setFont(new Font("楷体", 1, 20));
        tickettable.getTableHeader().setBackground(Color.orange);
        tickettable.getTableHeader().setReorderingAllowed(false); // 不可交换顺序
        tickettable.getTableHeader().setResizingAllowed(false); // 不可拉动表格
        tickettable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tickettableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tickettable);

        delet.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        delet.setForeground(new java.awt.Color(51, 51, 51));
        delet.setText("删除");
        delet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("微软雅黑", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("场次编号：");

        sIdtext.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        sIdtext.setForeground(new java.awt.Color(51, 51, 51));
        sIdtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sIdtextActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("微软雅黑", 0, 18)); // NOI18N
        back.setForeground(new java.awt.Color(51, 51, 51));
        back.setText("返回上级");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sIdtext, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(search)
                        .addGap(222, 222, 222))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(146, 146, 146))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(356, 356, 356)
                .addComponent(delet, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(108, 108, 108)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search)
                    .addComponent(jLabel1)
                    .addComponent(sIdtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delet)
                    .addComponent(back))
                .addGap(46, 46, 46))
        );

        getContentPane().add(jPanel1, "card2");

        pack();
    }// </editor-fold>

    private void sIdtextActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void deletActionPerformed(java.awt.event.ActionEvent evt) {                                      

        User user;
		UserService userservice=new UserServiceImpl();
		SessionService sessionservice=new SessionServiceImpl();
		double moneyprice;
		if(trow!=-1) {
			ticketservice.delTicket(ticketlist.get(trow).gettId());
			user=userservice.queryUserByid(ticketlist.get(trow).getuId());
			Session mysession=sessionservice.querySessionById(ticketlist.get(trow).getsId());
			mysession.setRemain(mysession.getRemain()+1);
			sessionservice.updateSession(mysession);
			moneyprice=sessionservice.querySessionById(ticketlist.get(trow).getsId()).getPrice();
			user.setBalance(user.getBalance()+moneyprice);
			if(userservice.updateUser(user)) {
				JOptionPane.showMessageDialog(null, "删除影票成功");
				
			}else {
				JOptionPane.showMessageDialog(null, "删除影票失败");
			}
		}else {
			JOptionPane.showMessageDialog(null, "请选择影票");
		}
        // TODO add your handling code here:
    }                                     

    private void tickettableMousePressed(java.awt.event.MouseEvent evt) {                                         

        trow=tickettable.getSelectedRow();
        // TODO add your handling code here:
    }                                        

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {                                       

        try {
			int sId=Integer.parseInt(sIdtext.getText());
			ticketlist=ticketservice.queryAllTicketsId(sId);
			filltickettable(ticketlist);
			
		} catch (NumberFormatException  e2) {
			// TODO: handle exception
			JOptionPane.showMessageDialog(null, "格式错误");
		}
		
        
        // TODO add your handling code here:
    }                                      

    private void backActionPerformed(java.awt.event.ActionEvent evt) {
       new A1().setVisible(true);
       dispose();
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(A8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(A8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(A8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(A8.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new A8().setVisible(true);
            }
        });
    }
    
    private void filltickettable(List<Ticket> ticketlist2) {
		// TODO Auto-generated method stub
		DefaultTableModel dtm=(DefaultTableModel) tickettable.getModel();
		dtm.setRowCount(0);
		int row=ticketlist2.size();
		for(int i=0;i<row;i++) {
			Vector v=new Vector();
			v.add(ticketlist2.get(i).gettId());
			v.add(ticketlist2.get(i).getuId());
			v.add(ticketlist2.get(i).getsId());
			v.add(ticketlist2.get(i).getSeat());
			dtm.addRow(v);
		}
	}
    
    // Variables declaration - do not modify
    private javax.swing.JButton back;
    private javax.swing.JButton delet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField sIdtext;
    private javax.swing.JButton search;
    private javax.swing.JTable tickettable;
    // End of variables declaration
}
